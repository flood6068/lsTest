MODULE HockeyStats;
// описание логики : https://documentation.lsfusion.org/pages/viewpage.action?pageId=2228240
REQUIRE MasterData, System;

CLASS Team 'Команда';

name 'Название команды' = DATA STRING[30] (Team) IN base NONULL ;
CONSTRAINT NOT name(Team t) AND t IS Team MESSAGE 'Название команды должно быть заполнено';
teamIndex 'Номер' (Team o) = PARTITION SUM 1 IF o IS Team ORDER o CHARWIDTH 6 NOFLEX ;


CLASS Player 'Игрок';

firstname 'Имя' = DATA STRING[30] (Player) IN base NONULL ;
CONSTRAINT NOT firstname(Player f) AND f IS Player MESSAGE 'Имя игрока должно быть заполнено';
middlename 'Отчество' = DATA STRING[30] (Player) IN base NONULL ;
CONSTRAINT NOT middlename(Player m) AND m IS Player MESSAGE 'Отчество игрока должно быть заполнено';
lastname 'Фамилия' = DATA STRING[30] (Player) IN base NONULL ;
CONSTRAINT NOT lastname (Player l) AND l IS Player MESSAGE 'Фамилия игрока должна быть заполнена';
playerTeam =  DATA Team (Player) NONULL ;
playerIndex 'Номер' (Player p) = PARTITION SUM 1 IF p IS Player ORDER p CHARWIDTH 6 NOFLEX ;
playerTeamName 'Команда игрока'(Player player) = name(playerTeam(player)); //Cсылка на команду для игрока
fio 'ФИО'(Player p) = CONCAT ' ', firstname(p), middlename(p), lastname(p); //Объединение фамилии имени и отчества
playerTeamNumber 'Номер игрока в команде' (Player p)= DATA INTEGER (Player) IN base NONULL;
CONSTRAINT playerTeamNumber (Player p) > 21 MESSAGE 'В команде бывает до 21 игрока';


CLASS Game 'Игра';

date 'Дата' = DATA DATE (Game);
hostTeam = DATA Team (Game);
guestTeam = DATA Team (Game);
hostTeamName 'Хозяева' (Game game) = name(hostTeam(game));
guestTeamName 'Гости' (Game game) = name(guestTeam(game));
match 'Матч' (Game game) = CONCAT '<>', hostTeamName(game), guestTeamName(game);

CONSTRAINT hostTeam(Game team) = guestTeam(team) CHECKED BY hostTeam, guestTeam MESSAGE 'Хозяйская и гостевая команды должны быть разными';



hostGoals 'Х голы' = DATA INTEGER (Game);
guestGoals 'Г голы' = DATA INTEGER (Game);

CONSTRAINT hostGoals(Game game) = guestGoals(game) MESSAGE 'Игра не может закончиться вничью';

CLASS Goal 'Голы';
goalAuthor = DATA Player(Goal);
goalAuthorName 'Автор Гола' (Goal goal) = fio(goalAuthor(goal)) NONULL ;
goalTime 'Вермя гола' = DATA TIME (Goal) IN base NONULL;
CONSTRAINT goalTime (Goal goal) > 00:20 OR goalTime(goal) < 00:00 MESSAGE 'Период длится 20 минут';
goalMatch = DATA Game(Goal);
goalMatchName 'Матч' (Goal game) = match(goalMatch(game)) NONULL ;
goalPeriod = DATA Period(Goal);
goalPeriodName 'Период' (Goal period) = staticCaption(goalPeriod(period)) NONULL ;

CONSTRAINT playerTeam(goalAuthor(Goal game)) != hostTeam(goalMatch(game)) CHECKED BY hostTeam, guestTeam MESSAGE 'Игрок не играл в этом матче';

CLASS Period 'Период'{
    first '1',
    second '2',
    third '3',
    overtime 'Овертайм',
    bullet 'Буллит'
}

goalQuantity 'Забитые голы'(Player p) = GROUP SUM 1 BY goalAuthor(Goal goal);

winner(Game game) = IF hostGoals(game) > guestGoals(game)
                    THEN hostTeam(game)
                    ELSE guestTeam(game);

looser(Game game) = IF hostGoals(game) > guestGoals(game)
                    THEN guestTeam(game)
                    ELSE hostTeam(game);

CLASS GameResult 'Р/И' {
    win 'П',
    winOT 'ПО',
    winSO 'ПБ'
}

resultName 'Имя' (GameResult game) = staticCaption(game) IF game IS GameResult IN base;

userResult = DATA GameResult (Game);
result (Game game) = OVERRIDE userResult(game), 
    (GameResult.win IF ((hostGoals(game) (-) guestGoals(game)) > 1 OR (guestGoals(game) (-) hostGoals(game)) > 1));
resultName 'Р/И' (Game game) = resultName(result(game));

CONSTRAINT ((hostGoals(Game game) (-) guestGoals(game)) > 1 OR (hostGoals(game) (-) guestGoals(game)) < -1) AND userResult(game) 
    MESSAGE 'Результат игры определен автоматически';

CONSTRAINT ((hostGoals(Game game) (-) guestGoals(game)) < 2 AND (hostGoals(game) (-) guestGoals(game)) > -2) AND NOT userResult(game) 
    MESSAGE 'Укажите результат игры';

hostGamesPlayed = GROUP SUM 1 BY hostTeam(Game game);
guestGamesPlayed = GROUP SUM 1 BY guestTeam(Game game);
gamesPlayed 'И' (Team team) = hostGamesPlayed(team) (+) guestGamesPlayed(team);

gamesWonBy(Team team, GameResult type) = OVERRIDE [GROUP SUM 1 BY winner(Game game), result(game)](team, type), 0;

gamesWon 'В' (Team team) = gamesWonBy(team, GameResult.win);
gamesWonOT 'ВО' (Team team) = gamesWonBy(team, GameResult.winOT);
gamesWonSO 'ВБ' (Team team) = gamesWonBy(team, GameResult.winSO);

gamesLostBy(Team team, GameResult type) = OVERRIDE [GROUP SUM 1 BY looser(Game game), result(game)](team, type), 0;

gamesLost 'П' (Team team) = gamesLostBy(team, GameResult.win);
gamesLostOT 'ПО' (Team team) = gamesLostBy(team, GameResult.winOT);
gamesLostSO 'ПБ' (Team team) = gamesLostBy(team, GameResult.winSO);

points 'Очки' (Team team) = gamesWon(team) * 3 + (gamesWonSO(team) + gamesWonOT(team)) * 2 + gamesLostOT(team) + gamesLostSO(team);

hostGoalsScored = GROUP SUM hostGoals(Game game) BY hostTeam(game);
guestGoalsScored = GROUP SUM guestGoals(Game game) BY guestTeam(game);
goalsScored 'Кол-во забитых голов' (Team team) = OVERRIDE hostGoalsScored(team) (+) guestGoalsScored(team), 0 IF team IS Team;

hostGoalsConceded = GROUP SUM guestGoals(Game game) BY hostTeam(game);
guestGoalsConceded = GROUP SUM hostGoals(Game game) BY guestTeam(game);
goalsConceded 'Кол-во пропущенных голов' (Team team) = OVERRIDE hostGoalsConceded(team) (+) guestGoalsConceded(team), 0 IF team IS Team;

place 'Место' (Team team) = PARTITION SUM 1 ORDER DESC points(team), gamesWon(team), gamesWonOT(team), gamesWonSO(team),
                                               (OVERRIDE goalsScored(team) (-) goalsConceded(team), 0), goalsScored(team);

FORM MainForm 'Турнирная таблица'
    OBJECTS game = Game
    PROPERTIES(game) date, hostTeamName, hostGoals, guestGoals, guestTeamName, resultName, NEW, DELETE
;

EXTEND FORM MainForm
    OBJECTS team = Team
    PROPERTIES(team) place, name, gamesPlayed, gamesWon, gamesWonOT, gamesWonSO,
                     gamesLostSO, gamesLostOT, gamesLost, goalsScored, goalsConceded, points, NEW, DELETE
    ORDER place(team)
;

FORM MainFormSingle 'Турнирная таблица'
    OBJECTS game = Game
    PROPERTIES(game) date, hostTeamName, hostGoals, guestGoals, guestTeamName, resultName, NEW, DELETE
    
    OBJECTS team = Team
    PROPERTIES(team) place, name, gamesPlayed, gamesWon, gamesWonOT, gamesWonSO,
                     gamesLostSO, gamesLostOT, gamesLost, goalsScored, goalsConceded, points, NEW, DELETE
    ORDER place(team)
;

FORM Teams 'Команды'
    OBJECTS team = Team
    PROPERTIES (team) teamIndex, name, place
    PROPERTIES (team) NEWSESSION NEW , EDIT , DELETE 
    ORDER teamIndex(team)
    
    OBJECTS player = Player
    PROPERTIES (player) playerTeamNumber, fio, goalQuantity READONLY 
    FILTERS playerTeam(player) = team
    ORDER playerTeamNumber (player)
    
    ;
    
DESIGN Teams {
    NEW TeamsDesign {
        fill = 1; // указываем, что контейнер должен занимать все доступное ему место
        type = SPLITV; // указываем, что контейнер будет вертикальным сплиттером
        MOVE BOX (team);
        MOVE BOX (player);
     } 
}
;

FORM PlayersEdit 'Редактирование игрока'
    OBJECTS  player = Player PANEL 
    PROPERTIES (player) playerIndex, firstname, middlename, lastname, playerTeamNumber, playerTeamName
    ORDER playerIndex(player)
    EDIT Player OBJECT player
;
FORM GamesEdit 'Игры'
    OBJECTS game = Game
    PROPERTIES (game) date, match
    PROPERTIES (game) NEWSESSION NEW, EDIT, DELETE
    ORDER date(game)
 
    LIST Game OBJECT game
;

DESIGN GamesEdit{
    NEW GamesEdit{
        REMOVE TOOLBARSYSTEM (game);
        REMOVE TOOLBARRIGHT (game);
        REMOVE PROPERTY (formRefresh());
        REMOVE PROPERTY (formDrop());
    }
}
FORM Players 'Игроки'
    OBJECTS player = Player
    PROPERTIES (player) playerIndex, fio, goalQuantity, playerTeamName
    PROPERTIES (player) NEWSESSION NEW, EDIT, DELETE
    ORDER playerIndex(player)
    
    OBJECTS goal = Goal
    PROPERTIES (goal) goalMatchName, goalPeriodName, goalTime READONLY 
    FILTERS goalAuthor(goal) = player
;
FORM GoalsEdit 'Ввод голов'
    OBJECTS goal = Goal PANEL 
    PROPERTIES (goal) goalAuthorName, goalMatchName, goalPeriodName, goalTime
    ORDER goalTime(goal)
    EDIT Goal OBJECT goal
    LIST Goal OBJECT goal
;
FORM Goals 'Голы'
    OBJECTS game = Game
    PROPERTIES (game) match, hostGoals, guestGoals READONLY 
    
    OBJECTS goal = Goal
    PROPERTIES (goal) goalAuthorName, goalPeriodName READONLY , goalTime 
    PROPERTIES (goal) NEWSESSION NEW, EDIT , DELETE 
    ORDER goalTime(goal)
    FILTERS goalMatch(goal) = game
;
FORM Period 'Период'
    OBJECTS period = Period
    PROPERTIES (period) staticCaption READONLY
    ORDER staticCaption(period)
    EDIT Period OBJECT period
    LIST Period OBJECT period
;

DESIGN Period {
    NEW PeriodDesign {
    caption = 'Период';
    REMOVE TOOLBARSYSTEM (period);
    REMOVE PROPERTY (formRefresh());
    REMOVE PROPERTY (formDrop());
    }
}
FORM TopPlayers 'Бомбардиры'
    OBJECTS player = Player
    PROPERTIES (player) goalQuantity, fio
    ORDER goalQuantity(player) DESC
    
    OBJECTS goal = Goal
    PROPERTIES (goal) goalMatchName, goalPeriodName, goalTime
    FILTERS goalAuthor(goal) = player
;

NAVIGATOR {
    masterData{
            NEW FOLDER References 'Турнирные справочники' {
                NEW Teams FIRST;
                NEW Players FIRST;
            }
        }
    NEW MainForm FIRST;
    NEW Goals AFTER MainForm;
    NEW TopPlayers AFTER  Goals;
}